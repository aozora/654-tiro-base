// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("VITE_DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  password String
  role     String
  sessions Session[]
}

model Session {
  id        String   @id
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  userId    String
}

model Player {
  id                   String                 @id @default(uuid())
  name                 String
  picture              String?
  isActive             Boolean                @default(true)
  PlayersOnTournaments PlayersOnTournaments[]
  PlayersOnMatches     PlayersOnMatches[]
}

model Tournament {
  id                   String                 @id @default(uuid())
  title                String
  isActive             Boolean                @default(true)
  PlayersOnTournaments PlayersOnTournaments[]
}

model PlayersOnTournaments {
  player       Player     @relation(fields: [playerId], references: [id])
  playerId     String
  tournament   Tournament @relation(fields: [tournamentId], references: [id])
  tournamentId String
  isActive     Boolean    @default(true)

  @@id([playerId, tournamentId])
}

model Match {
  id               String             @id @default(uuid())
  date             DateTime
  PlayersOnMatches PlayersOnMatches[]
}

model PlayersOnMatches {
  player   Player @relation(fields: [playerId], references: [id])
  playerId String
  match    Match  @relation(fields: [matchId], references: [id])
  matchId  String
  points   Int

  @@id([playerId, matchId])
}
